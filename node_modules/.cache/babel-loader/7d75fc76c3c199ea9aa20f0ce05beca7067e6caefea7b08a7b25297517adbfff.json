{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { allEvents } from 'make-event-props';\nimport { PDFDataRangeTransport } from 'pdfjs-dist';\nimport { isDefined } from './utils';\nimport LinkService from '../LinkService';\nexport const eventProps = (() => {\n  const result = {};\n  allEvents.forEach(eventName => {\n    result[eventName] = PropTypes.func;\n  });\n  return result;\n})();\nconst isTypedArray = PropTypes.oneOfType([PropTypes.instanceOf(Int8Array), PropTypes.instanceOf(Uint8Array), PropTypes.instanceOf(Uint8ClampedArray), PropTypes.instanceOf(Int16Array), PropTypes.instanceOf(Uint16Array), PropTypes.instanceOf(Int32Array), PropTypes.instanceOf(Uint32Array), PropTypes.instanceOf(Float32Array), PropTypes.instanceOf(Float64Array)]);\nconst fileTypes = [PropTypes.string, PropTypes.instanceOf(ArrayBuffer), PropTypes.shape({\n  data: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(ArrayBuffer), PropTypes.arrayOf(PropTypes.number.isRequired), isTypedArray]).isRequired\n}), PropTypes.shape({\n  range: PropTypes.instanceOf(PDFDataRangeTransport).isRequired\n}), PropTypes.shape({\n  url: PropTypes.string.isRequired\n})];\nif (typeof Blob !== 'undefined') {\n  fileTypes.push(PropTypes.instanceOf(Blob));\n}\nexport const isClassName = PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]);\nexport const isFile = PropTypes.oneOfType(fileTypes);\nexport const isLinkService = PropTypes.instanceOf(LinkService);\nexport const isLinkTarget = PropTypes.oneOf(['_self', '_blank', '_parent', '_top']);\nexport const isPage = PropTypes.shape({\n  commonObjs: PropTypes.shape({}).isRequired,\n  getAnnotations: PropTypes.func.isRequired,\n  getTextContent: PropTypes.func.isRequired,\n  getViewport: PropTypes.func.isRequired,\n  render: PropTypes.func.isRequired\n});\nexport const isPageIndex = function isPageIndex(props, propName, componentName) {\n  const {\n    [propName]: pageIndex,\n    pageNumber,\n    pdf\n  } = props;\n  if (!isDefined(pdf)) {\n    return null;\n  }\n  if (isDefined(pageIndex)) {\n    if (typeof pageIndex !== 'number') {\n      return new Error(`\\`${propName}\\` of type \\`${typeof pageIndex}\\` supplied to \\`${componentName}\\`, expected \\`number\\`.`);\n    }\n    if (pageIndex < 0) {\n      return new Error(`Expected \\`${propName}\\` to be greater or equal to 0.`);\n    }\n    const {\n      numPages\n    } = pdf;\n    if (pageIndex + 1 > numPages) {\n      return new Error(`Expected \\`${propName}\\` to be less or equal to ${numPages - 1}.`);\n    }\n  } else if (!isDefined(pageNumber)) {\n    return new Error(`\\`${propName}\\` not supplied. Either pageIndex or pageNumber must be supplied to \\`${componentName}\\`.`);\n  }\n  // Everything is fine\n  return null;\n};\nexport const isPageNumber = function isPageNumber(props, propName, componentName) {\n  const {\n    [propName]: pageNumber,\n    pageIndex,\n    pdf\n  } = props;\n  if (!isDefined(pdf)) {\n    return null;\n  }\n  if (isDefined(pageNumber)) {\n    if (typeof pageNumber !== 'number') {\n      return new Error(`\\`${propName}\\` of type \\`${typeof pageNumber}\\` supplied to \\`${componentName}\\`, expected \\`number\\`.`);\n    }\n    if (pageNumber < 1) {\n      return new Error(`Expected \\`${propName}\\` to be greater or equal to 1.`);\n    }\n    const {\n      numPages\n    } = pdf;\n    if (pageNumber > numPages) {\n      return new Error(`Expected \\`${propName}\\` to be less or equal to ${numPages}.`);\n    }\n  } else if (!isDefined(pageIndex)) {\n    return new Error(`\\`${propName}\\` not supplied. Either pageIndex or pageNumber must be supplied to \\`${componentName}\\`.`);\n  }\n  // Everything is fine\n  return null;\n};\nexport const isPdf = PropTypes.oneOfType([PropTypes.shape({\n  getDestination: PropTypes.func.isRequired,\n  getOutline: PropTypes.func.isRequired,\n  getPage: PropTypes.func.isRequired,\n  numPages: PropTypes.number.isRequired\n}), PropTypes.bool]);\nexport const isRef = PropTypes.oneOfType([PropTypes.func, PropTypes.exact({\n  current: PropTypes.any\n})]);\nexport const isRenderMode = PropTypes.oneOf(['canvas', 'none', 'svg']);\nexport const isRotate = PropTypes.oneOf([0, 90, 180, 270]);","map":{"version":3,"names":["PropTypes","allEvents","PDFDataRangeTransport","isDefined","LinkService","eventProps","result","forEach","eventName","func","isTypedArray","oneOfType","instanceOf","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","fileTypes","string","ArrayBuffer","shape","data","arrayOf","number","isRequired","range","url","Blob","push","isClassName","isFile","isLinkService","isLinkTarget","oneOf","isPage","commonObjs","getAnnotations","getTextContent","getViewport","render","isPageIndex","props","propName","componentName","pageIndex","pageNumber","pdf","Error","numPages","isPageNumber","isPdf","getDestination","getOutline","getPage","bool","isRef","exact","current","any","isRenderMode","isRotate"],"sources":["/Users/nate/Documents/development/john-white-site/node_modules/react-pdf/dist/esm/shared/propTypes.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { allEvents } from 'make-event-props';\nimport { PDFDataRangeTransport } from 'pdfjs-dist';\nimport { isDefined } from './utils';\nimport LinkService from '../LinkService';\nexport const eventProps = (() => {\n    const result = {};\n    allEvents.forEach((eventName) => {\n        result[eventName] = PropTypes.func;\n    });\n    return result;\n})();\nconst isTypedArray = PropTypes.oneOfType([\n    PropTypes.instanceOf(Int8Array),\n    PropTypes.instanceOf(Uint8Array),\n    PropTypes.instanceOf(Uint8ClampedArray),\n    PropTypes.instanceOf(Int16Array),\n    PropTypes.instanceOf(Uint16Array),\n    PropTypes.instanceOf(Int32Array),\n    PropTypes.instanceOf(Uint32Array),\n    PropTypes.instanceOf(Float32Array),\n    PropTypes.instanceOf(Float64Array),\n]);\nconst fileTypes = [\n    PropTypes.string,\n    PropTypes.instanceOf(ArrayBuffer),\n    PropTypes.shape({\n        data: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.instanceOf(ArrayBuffer),\n            PropTypes.arrayOf(PropTypes.number.isRequired),\n            isTypedArray,\n        ]).isRequired,\n    }),\n    PropTypes.shape({\n        range: PropTypes.instanceOf(PDFDataRangeTransport).isRequired,\n    }),\n    PropTypes.shape({\n        url: PropTypes.string.isRequired,\n    }),\n];\nif (typeof Blob !== 'undefined') {\n    fileTypes.push(PropTypes.instanceOf(Blob));\n}\nexport const isClassName = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n]);\nexport const isFile = PropTypes.oneOfType(fileTypes);\nexport const isLinkService = PropTypes.instanceOf(LinkService);\nexport const isLinkTarget = PropTypes.oneOf(['_self', '_blank', '_parent', '_top']);\nexport const isPage = PropTypes.shape({\n    commonObjs: PropTypes.shape({}).isRequired,\n    getAnnotations: PropTypes.func.isRequired,\n    getTextContent: PropTypes.func.isRequired,\n    getViewport: PropTypes.func.isRequired,\n    render: PropTypes.func.isRequired,\n});\nexport const isPageIndex = function isPageIndex(props, propName, componentName) {\n    const { [propName]: pageIndex, pageNumber, pdf } = props;\n    if (!isDefined(pdf)) {\n        return null;\n    }\n    if (isDefined(pageIndex)) {\n        if (typeof pageIndex !== 'number') {\n            return new Error(`\\`${propName}\\` of type \\`${typeof pageIndex}\\` supplied to \\`${componentName}\\`, expected \\`number\\`.`);\n        }\n        if (pageIndex < 0) {\n            return new Error(`Expected \\`${propName}\\` to be greater or equal to 0.`);\n        }\n        const { numPages } = pdf;\n        if (pageIndex + 1 > numPages) {\n            return new Error(`Expected \\`${propName}\\` to be less or equal to ${numPages - 1}.`);\n        }\n    }\n    else if (!isDefined(pageNumber)) {\n        return new Error(`\\`${propName}\\` not supplied. Either pageIndex or pageNumber must be supplied to \\`${componentName}\\`.`);\n    }\n    // Everything is fine\n    return null;\n};\nexport const isPageNumber = function isPageNumber(props, propName, componentName) {\n    const { [propName]: pageNumber, pageIndex, pdf } = props;\n    if (!isDefined(pdf)) {\n        return null;\n    }\n    if (isDefined(pageNumber)) {\n        if (typeof pageNumber !== 'number') {\n            return new Error(`\\`${propName}\\` of type \\`${typeof pageNumber}\\` supplied to \\`${componentName}\\`, expected \\`number\\`.`);\n        }\n        if (pageNumber < 1) {\n            return new Error(`Expected \\`${propName}\\` to be greater or equal to 1.`);\n        }\n        const { numPages } = pdf;\n        if (pageNumber > numPages) {\n            return new Error(`Expected \\`${propName}\\` to be less or equal to ${numPages}.`);\n        }\n    }\n    else if (!isDefined(pageIndex)) {\n        return new Error(`\\`${propName}\\` not supplied. Either pageIndex or pageNumber must be supplied to \\`${componentName}\\`.`);\n    }\n    // Everything is fine\n    return null;\n};\nexport const isPdf = PropTypes.oneOfType([\n    PropTypes.shape({\n        getDestination: PropTypes.func.isRequired,\n        getOutline: PropTypes.func.isRequired,\n        getPage: PropTypes.func.isRequired,\n        numPages: PropTypes.number.isRequired,\n    }),\n    PropTypes.bool,\n]);\nexport const isRef = PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.exact({\n        current: PropTypes.any,\n    }),\n]);\nexport const isRenderMode = PropTypes.oneOf(['canvas', 'none', 'svg']);\nexport const isRotate = PropTypes.oneOf([0, 90, 180, 270]);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}